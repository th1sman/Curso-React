{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jaime\\\\Desktop\\\\Dev\\\\Curso-React\\\\src\\\\components\\\\TrendingSearches\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport getTrendingTerms from '../../services/getTrendingsTermsServices';\nimport Category from '../Category';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TrendingSearches() {\n  _s();\n\n  const [trends, setTrends] = useState([]);\n  useEffect(function () {\n    getTrendingTerms().then(setTrends);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Category, {\n    name: \"Tendencias\",\n    options: trends\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, this);\n}\n\n_s(TrendingSearches, \"kLUnhehmoevJwfCWQUk2udGvkuc=\");\n\n_c = TrendingSearches;\nexport default function LazyTrending() {\n  _s2();\n\n  const [show, setShow] = useState(false);\n  useEffect(function () {\n    const onChange = entries => {\n      console.log(entries);\n      const e = entries[0];\n      console.log(e);\n    };\n\n    const observer = new IntersectionObserver(onChange, {\n      rootMargin: '100px'\n    });\n    observer.observe(document.getElementById('LazyTrending'));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"LazyTrending\",\n    children: show ? /*#__PURE__*/_jsxDEV(TrendingSearches, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n}\n\n_s2(LazyTrending, \"bXBd/WbmO9A8Q7bxaOKZvuJyGc0=\");\n\n_c2 = LazyTrending;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TrendingSearches\");\n$RefreshReg$(_c2, \"LazyTrending\");","map":{"version":3,"sources":["C:/Users/Jaime/Desktop/Dev/Curso-React/src/components/TrendingSearches/index.js"],"names":["React","useEffect","useState","getTrendingTerms","Category","TrendingSearches","trends","setTrends","then","LazyTrending","show","setShow","onChange","entries","console","log","e","observer","IntersectionObserver","rootMargin","observe","document","getElementById"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,0CAA7B;AACA,OAAOC,QAAP,MAAqB,aAArB;;;AAEC,SAASC,gBAAT,GAA6B;AAAA;;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AAClBE,IAAAA,gBAAgB,GAAGK,IAAnB,CAAwBD,SAAxB;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBAAO,QAAC,QAAD;AAAU,IAAA,IAAI,EAAC,YAAf;AAA4B,IAAA,OAAO,EAAED;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GARSD,gB;;KAAAA,gB;AAWV,eAAe,SAASI,YAAT,GAAyB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMW,QAAQ,GAAIC,OAAD,IAAa;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,YAAMG,CAAC,GAAGH,OAAO,CAAC,CAAD,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACH,KAJD;;AAMA,UAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBN,QAAzB,EAAmC;AAChDO,MAAAA,UAAU,EAAE;AADoC,KAAnC,CAAjB;AAGAF,IAAAA,QAAQ,CAACG,OAAT,CAAiBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAjB;AACH,GAXQ,CAAT;AAaA,sBAAO;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,cACFZ,IAAI,gBAAG,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAA0B;AAD5B;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH;;IApBuBD,Y;;MAAAA,Y","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport getTrendingTerms from '../../services/getTrendingsTermsServices'\r\nimport Category from '../Category'\r\n\r\n function TrendingSearches () {\r\n    const [trends, setTrends] = useState([])\r\n\r\n    useEffect(function () {\r\n        getTrendingTerms().then(setTrends)\r\n    }, [])\r\n\r\n    return <Category name='Tendencias' options={trends} />\r\n}\r\n\r\n\r\nexport default function LazyTrending () {\r\n    const [show, setShow] = useState(false)\r\n\r\n    useEffect(function () {\r\n        const onChange = (entries) => {\r\n            console.log(entries)\r\n            const e = entries[0]\r\n            console.log(e)\r\n        }\r\n\r\n        const observer = new IntersectionObserver(onChange, {\r\n            rootMargin: '100px'\r\n        })\r\n        observer.observe(document.getElementById('LazyTrending'))\r\n    })\r\n\r\n    return <div id='LazyTrending'>\r\n        {show ? <TrendingSearches /> : null}\r\n    </div>\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}