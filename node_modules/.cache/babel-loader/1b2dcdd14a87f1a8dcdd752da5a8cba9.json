{"ast":null,"code":"const apiKey = 'sKCYxHYpD5uInVkrCPoBPx1DZThI5Xez';\nexport default function getGifs({\n  keyword = 'Matrix'\n} = {}) {\n  const apiURL = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${keyword}&limit=10&offset=0&rating=g&lang=en`;\n  return fetch(apiURL).then(res => res.json()).then(response => {\n    const {\n      data = []\n    } = response;\n\n    if (Array.isArray(data)) {\n      const gifs = data.map(image => {\n        const {\n          images,\n          title,\n          id\n        } = image;\n        const {\n          url\n        } = images.downsized_medium;\n        return {\n          title,\n          id,\n          url\n        };\n      });\n      return gifs;\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/Jaime/Desktop/Dev/Curso-React/src/services/getGifs.js"],"names":["apiKey","getGifs","keyword","apiURL","fetch","then","res","json","response","data","Array","isArray","gifs","map","image","images","title","id","url","downsized_medium"],"mappings":"AAEE,MAAMA,MAAM,GAAI,kCAAhB;AAKF,eAAe,SAASC,OAAT,CAAkB;AAACC,EAAAA,OAAO,GAAG;AAAX,IAAwB,EAA1C,EAA8C;AAEzD,QAAMC,MAAM,GAAI,gDAA+CH,MAAO,MAAKE,OAAQ,qCAAnF;AAEC,SAAQE,KAAK,CAACD,MAAD,CAAL,CACNE,IADM,CACDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADN,EAENF,IAFM,CAEDG,QAAQ,IAAI;AACd,UAAM;AAACC,MAAAA,IAAI,GAAG;AAAR,QAAcD,QAApB;;AACF,QAAGE,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAH,EAAuB;AACnB,YAAMG,IAAI,GAAGH,IAAI,CAACI,GAAL,CAASC,KAAK,IAAI;AAC3B,cAAM;AAACC,UAAAA,MAAD;AAASC,UAAAA,KAAT;AAAgBC,UAAAA;AAAhB,YAAsBH,KAA5B;AACA,cAAM;AAAEI,UAAAA;AAAF,YAAUH,MAAM,CAACI,gBAAvB;AACA,eAAO;AAAEH,UAAAA,KAAF;AAASC,UAAAA,EAAT;AAAaC,UAAAA;AAAb,SAAP;AACH,OAJY,CAAb;AAKA,aAAON,IAAP;AACH;AACF,GAZM,CAAR;AAaJ","sourcesContent":["\r\n\r\n  const apiKey  = 'sKCYxHYpD5uInVkrCPoBPx1DZThI5Xez';\r\n\r\n  \r\n\r\n\r\nexport default function getGifs( {keyword = 'Matrix' } = {}) {\r\n\r\n    const apiURL = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${keyword}&limit=10&offset=0&rating=g&lang=en`;\r\n\r\n     return  fetch(apiURL)\r\n      .then(res => res.json())\r\n      .then(response => {\r\n          const {data = []} = response\r\n        if(Array.isArray(data)){\r\n            const gifs = data.map(image => {\r\n                const {images, title, id} = image\r\n                const { url } = images.downsized_medium\r\n                return { title, id, url}\r\n            })\r\n            return gifs\r\n        }\r\n      })\r\n}"]},"metadata":{},"sourceType":"module"}